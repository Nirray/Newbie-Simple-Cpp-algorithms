#include <stdio.h>
#include <string.h>
 
#define max 10
 
int power2(int exp);   //prototyp
int factorial(int n);
int factorialR(int n);
int powerof(int base, int exp);
 
int getMax(int* tab, int len)
{
    int maxEl = tab[0];
    for(int i=1; i<len; i++)
        if (tab[i]>maxEl)
            maxEl=tab[i];
    return maxEl;  
}
 
int whereIsMax(int* tab, int len)
{
    int maxEl = tab[0];
    int whereIs = 0;
    for(int i=1; i<len; i++)
        if (tab[i]>maxEl)
        {
            maxEl=tab[i];
            whereIs = i;
        }
    return whereIs;
}
 
int whereIsMin(int* tab, int len)
{
    int maxEl = tab[0];
    int whereIs = 0;
    for(int i=1; i<len; i++)
        if (tab[i]<maxEl)
        {
            maxEl=tab[i];
            whereIs = i;
        }
    return whereIs;
}
 
int getMin(int* tab, int len)
{
    int maxEl = tab[0];
    for(int i=1; i<len; i++)
        if (tab[i]<maxEl)
            maxEl=tab[i];
    return maxEl;  
}
 
void printTab(int*tab, int len)
{
    printf("Tablica\n[");
    for(int i=0; i<len; i++)
        printf("%d, ",tab[i]);
    puts("]\n");
    return;
}
 
int ExchangeMinMax2(int* tab, int len)
{
    int tmp = tab[whereIsMax(tab,len)];
    tab[whereIsMax(tab,len)]=getMin(tab,len);
    tab[whereIsMin(tab,len)]=tmp;
    return 0;  
}
 
int ExchangeMinMax(int* tab, int len)
{
    int maxx = tab[0];
    int whereIsMax = 0;
   
    int minn = tab[0];
    int whereIsMin = 0;
   
    for(int i=1; i<len; i++)
    {
   
        if (tab[i]>maxx)
        {
            maxx = tab[i];
            whereIsMax = i;
        }
       
        if (tab[i]<minn)
        {
            minn = tab[i];
            whereIsMin = i;
        }
    }
    tab[whereIsMax]=minn;
    tab[whereIsMin]=maxx;
   
    return 0;
}
 
int convertToNumber(char* text)
{   // "123"
    int number = 0;
    for(int i=strlen(text)-1; i>=0; i--)
        number += (text[i]-'0')*powerof(10,strlen(text)-1-i);
    return number;
}
 
bool isFemale(char* text)
{
    if (text[strlen(text)-1]=='a')
        return true;
    else
        return false;
}
 
char* toUpper(char* text)
{
    for(int i=0; i<strlen(text);i++)
        if (text[i]>='a' && text[i]<='z') //>=97='a'
            text[i]-=' ';                       //spacja = 32=' '
    return text;
}
 
char* toLower(char* text)
{
    for(int i=0; i<strlen(text);i++)
        if (text[i]>='A' && text[i]<='Z') //>=97='a'
            text[i]+=' ';                       //spacja = 32=' '
    return text;
}
 
int main()
{
    char imie[] = "Mariusz";
    puts(toLower(toUpper(imie)));
   
    getchar();
    if (isFemale(imie)) /*== true*/
        puts("Kobieta");
    else
        puts("Facet");
   
   
    getchar();
   
   
    char text[] = "123";   //  \0
    printf("%d",convertToNumber(text)+10);
    getchar();
   
    for(int i=0; i<255; i++)
        printf("%c-%d, ",i,i);
        //printf("%c(%d)",text[i],text[i]);
       
    getchar();
    //puts(text);
    //printf("%s\n",text);
    //printf(text);
   
   
   
    getchar();
   
   
    int table[] = {0,1,36,3,4,5};
    //printf("Max = %d jest pod indeksem %d",getMax(table,6),whereIsMax(table,6));
   
    printTab(table,6);
    //ExchangeMinMax(table,6);
    //printTab(table,6);
    ExchangeMinMax2(table,6);
    printTab(table,6);
    getchar();
    //const int max = 10;
    int i;
    printf("\nFOR\n");
    for(i=0; i<max; i++)   //i+=3  <=> i=i+3
        printf("[%d] - info z programu! \n",i);
       
    printf("\nWHILE\n");
    i=0;
    while(i<max)
    {
        printf("[%d] - info z programu! \n",i);
        i++;
    }
    //printf("\n\a%d",15);
   
    printf("\nDO WHILE");
    i=0;
    do
    {
        printf("[%d] - info z programu! \n",i);
        i++;
    }while(i<max);
   
   
    //int dwado3 = power2(3);
    printf("\n 2^3 = %d",power2(3));
    //printf()
       
    for(i=0; i<10; i++)
        printf("\n2^%d=%d  --- silnia -> (%d)=I(%d)-R(%d)",i,power2(i),i,factorial(i),factorialR(i));  
    //return 0;
   
    printf("\n badanie znaku zmiennej i\n");
    i=-1;
    /*
    if(i<0)
        printf("i<0 => %d",i);
    else
        if (i==0)
            printf("i=0 => %d",i);
        else
            printf("i>0 => %d",i);
    */
    i=-1;      
    switch(i)
    {
        case -1 : printf("i=-1 => %d",i);
        case 0: printf("i=0 => %d",i);
        case 1 : printf("i=1 => %d",i);
    }
 
 
    printf("\nPoerOF %d",powerof(10,3));
    return 0;
}
 
int factorial(int n)
{
    int product=1;
    for(int i=1; i<=n ; i++)
        product *= i;
    return product;
}
 
int factorialR(int n)
{
    if (n==0 || n==1)
        return 1;
    else return n*factorialR(n-1); 
}
 
int power2(int exp)
{
    int Result = 1;
    for(int i=0; i< exp; i++)
        Result *= 2;
    return Result;
}
 
int powerof(int base, int exp)
{
    int Result=1;
    for(int i=0; i< exp; i++)
        Result *= base;
    return Result;
}